[
  {
    "id": "p1004",
    "questionTitle": "Homework #3 – Apache Spark and YARN",
    "problemStatementFull": "Assignment 1\n        Uninformed & Informed Search\n        Max possible score:\n        \n            4308: 100 Points [+40 Points EC]\n            5360: 100 Points\n        \n        Task 1 (This task will be used as part of the ABET assesment for CSE 4308 students)\n        Max: [4308: 100 Points, 5360: 100 Points]\n        Your task is to build an agent to solve a modifed version of the 8 puzzle problem (called the Expense 8 puzzle problem). The task is still to take a 3X3 grid on which 8 tiles have been placed, where you can only move one tile at a time to an adjacent location (as long as it is blank) and figure out the order in which to move the tiles to get it to a desired configuration. However now the number on the tile now also represents the cot of moving that tile (moving the tile marked 6 costs 6).\n        \n        Your program should be called expense_8_puzzle and the command line invocation should follow the following format:\n        \n        expense_8_puzzle.py <start-file> <goal-file> <method> <dump-flag>\n        \n            <start-file> and <goal-file> are required.\n            <method> can be\n                bfs - Breadth First Search\n                ucs - Uniform Cost Search\n                dfs - Depth First Search\n                dls - Depth Limited Search (Note: Depth Limit will be obtained as a Console Input) [Note: This part is EC for CSE 4308 students]\n                ids - Iterative Deepening Search [Note: This part is EC for CSE 4308 students]\n                greedy - Greedy Seach\n                a* - A* Search (Note: if no <method> is given, this should be the default option)\n            If <dump-flag> is given as true, search trace is dumped for analysis in trace-<date>-<time>.txt (Note: if <dump-flag> is not given, assume it is false)\n                search trace contains: fringe and closed set contents per loop of search(and per iteration for IDS), counts of nodes expanded and nodes\n        \n        Both start file and goal file need to follow the format as shown here:\n        \n            Sample Start file\n            Sample Goal file\n        \n        Your output needs to follow the format given in the example here:\n        \n        For:\n        \n        expense_8_puzzle.py start.txt goal.txt a* true\n        \n        The output should appear as follows:\n        \n        Nodes Popped: 97\n        Nodes Expanded: 64\n        Nodes Generated: 173\n        Max Fringe Size: 77\n        Solution Found at depth 12 with cost of 63.\n        Steps:\n        Move 7 Left\n        Move 5 Up\n        Move 8 Right\n        Move 7 Down\n        Move 5 Left\n        Move 6 Down\n        Move 3 Right\n        Move 2 Right\n        Move 1 Up\n        Move 4 Up\n        Move 7 Left\n        Move 8 Left\n        \n        In additon, the seach trace should have all the information contained in the file given here. (The format is not important, the information is)\n        \n        Note: for both greedy and A* search you need to come up with a acceptable heuristic (Hint: Consider a modified version of h2 as discussed in class)\n        \n        Note: Implementing DLS and IDS is required for CSE 5360 students but optional for CSE 4308 students (and carries upto 40 points EC)",
    "answerTitle": "Here's how you can build an agent to solve the Expense 8 Puzzle Problem:"
  },
   {
    "id": "p1004",
    "questionTitle": "Assignment 1 Uninformed",
    "problemStatementFull": " 1.	Draw a detailed architecture diagram describing the operation of the Spark Platform: (Hint: the 4 main components should be covered – Spark Driver, Executors, Cluster Manager, Worker Nodes.) \n 2.	Describe RDDS:  \n a.	How are they created? \n b.	What types of processing can be performed on them? \n •	Give 3 examples of each type of RDD processing. \n 3.	Write a Spark Program to count the number of images in a URL and then display the URLs of these images. For example, the program should read the URL www.cnn.com  Then, it should display the output as:  a.  There are <n> images at the <<URL>> site  b. The images are:  <<Image URL 1>> <<Image URL 2>> <<Image URL 3>> ... << Image URL n>> •	Hints:  o	First for running spark in the terminal window, use the code spark-shell  o	You can use Java, Scala, or Python as your language for this assignment o	Provide your source code as well as a screenshot or copy/paste of your Spark results AND give the number of images  o	You can use any website, it does NOT have to be CNN – that’s just an example 4.	Describe the YARN Architecture, and discuss functions of its components. 5.	Describe Zookeeper and discuss its consistency guarantees. ",
    "answerTitle": "Here's how you can build an agent to solve the Expense 8 Puzzle Problem:"
  }
]
